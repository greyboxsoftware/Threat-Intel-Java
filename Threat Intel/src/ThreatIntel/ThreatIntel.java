/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ThreatIntel;

import java.net.URI;
import javax.swing.JOptionPane;
import java.util.regex.*;

/**
 *
 * @author kjohnson
 */
public class ThreatIntel extends javax.swing.JFrame {

    /**
     * Creates new form ThreatIntel
     */
    public ThreatIntel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputBox = new javax.swing.JTextField();
        submitButton = new javax.swing.JButton();
        anomali = new javax.swing.JCheckBox();
        virustotal = new javax.swing.JCheckBox();
        alienvault = new javax.swing.JCheckBox();
        isc = new javax.swing.JCheckBox();
        robtex = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        cymon = new javax.swing.JCheckBox();
        senderbase = new javax.swing.JCheckBox();
        abuseipdb = new javax.swing.JCheckBox();
        malwaredomainlist = new javax.swing.JCheckBox();
        maxmind = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Threat Intel Search");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(java.awt.Color.white);

        inputBox.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        inputBox.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        submitButton.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        submitButton.setText("Search");
        submitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitButtonActionPerformed(evt);
            }
        });

        anomali.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        anomali.setSelected(true);
        anomali.setText("Threat Stream");

        virustotal.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        virustotal.setSelected(true);
        virustotal.setText("Virus Total");

        alienvault.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        alienvault.setSelected(true);
        alienvault.setText("Alien Vault");

        isc.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        isc.setSelected(true);
        isc.setText("ISC");

        robtex.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        robtex.setSelected(true);
        robtex.setText("Robtex");

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Enter IP Address");

        cymon.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        cymon.setSelected(true);
        cymon.setText("Cymon");

        senderbase.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        senderbase.setSelected(true);
        senderbase.setText("SenderBase");

        abuseipdb.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        abuseipdb.setSelected(true);
        abuseipdb.setText("AbuseIPDB");

        malwaredomainlist.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        malwaredomainlist.setSelected(true);
        malwaredomainlist.setText("Malware Domain List");

        maxmind.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        maxmind.setSelected(true);
        maxmind.setText("MaxMind");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputBox)
                    .addComponent(submitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(anomali, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(virustotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(alienvault, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(isc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(robtex, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(malwaredomainlist, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(abuseipdb, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(senderbase, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cymon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(maxmind, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 853, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(inputBox, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(submitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(anomali)
                    .addComponent(cymon))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(virustotal)
                    .addComponent(senderbase))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(alienvault)
                    .addComponent(abuseipdb))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(isc)
                    .addComponent(malwaredomainlist))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(robtex)
                    .addComponent(maxmind))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
        // TODO add your handling code here:
        System.out.println(inputBox.getText());
        
        if (inputBox.getText().isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Input Field Cannot Be Left Blank. "
                    + "Error Code 5");
            System.exit(5);
        }
        
        if (inputBox.getText().matches("[0-9]+.[0-9]+.[0-9]+.[0-9]+")) {
            System.out.println("Valid IP");
        } else {
            JOptionPane.showMessageDialog(rootPane, "Invalid IP Address "
                    + "Error Code 4");
            System.exit(4);
        }
        
        if (anomali.isSelected()) {
            try {
            String anomaliLink = "https://ui.threatstream.com/detail/ip/" + inputBox.getText();
            URI anomaliUri = URI.create(anomaliLink);
            System.out.println(anomaliLink);
            java.awt.Desktop.getDesktop().browse(anomaliUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        if (virustotal.isSelected()) {
            try {
                String virustotalLink = "https://www.virustotal.com/en/ip-address/" + inputBox.getText() + "/information/";
                URI virustotalUri = URI.create(virustotalLink);
                System.out.println(virustotalLink); 
                java.awt.Desktop.getDesktop().browse(virustotalUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        if (alienvault.isSelected()) {
            try {
                String alienvaultLink = "https://www.alienvault.com/open-threat-exchange/dashboard#/my/reputation-monitor/" + inputBox.getText();
                URI alienvaultUri = URI.create(alienvaultLink);
                System.out.println(alienvaultLink); 
                java.awt.Desktop.getDesktop().browse(alienvaultUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (isc.isSelected()) {
            try {
                String iscLink = "https://isc.sans.edu/ipinfo.html?ip=" + inputBox.getText();
                URI iscUri = URI.create(iscLink);
                System.out.println(iscLink); 
                java.awt.Desktop.getDesktop().browse(iscUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (robtex.isSelected()) {
            try {
                String robtexLink = "https://www.robtex.com/?ip=" + inputBox.getText();
                URI robtexUri = URI.create(robtexLink);
                System.out.println(robtexLink); 
                java.awt.Desktop.getDesktop().browse(robtexUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (cymon.isSelected()) {
            try {
                String cymonLink = "https://www.cymon.io/" + inputBox.getText();
                URI cymonUri = URI.create(cymonLink);
                System.out.println(cymonLink); 
                java.awt.Desktop.getDesktop().browse(cymonUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (senderbase.isSelected()) {
            try {
                String senderbaseLink = "http://www.senderbase.org/lookup/?search_string=" + inputBox.getText();
                URI senderbaseUri = URI.create(senderbaseLink);
                System.out.println(senderbaseLink); 
                java.awt.Desktop.getDesktop().browse(senderbaseUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (abuseipdb.isSelected()) {
            try {
                String abuseipdbLink = "https://abuseipdb.com/check/" + inputBox.getText();
                URI abuseipdbUri = URI.create(abuseipdbLink);
                System.out.println(abuseipdbLink); 
                java.awt.Desktop.getDesktop().browse(abuseipdbUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (malwaredomainlist.isSelected()) {
            try {
                String malwaredomainlistLink = "https://www.malwaredomainlist.com/mdl.php?search=" + inputBox.getText() + "&colsearch=IP&quantity=50";
                URI malwaredomainlistUri = URI.create(malwaredomainlistLink);
                System.out.println(malwaredomainlistLink); 
                java.awt.Desktop.getDesktop().browse(malwaredomainlistUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
        
        if (maxmind.isSelected()) {
            try {
                String maxmindLink = "https://www.maxmind.com/geoip/v2.1/city/" + inputBox.getText() + "?demo=1";
                URI maxmindUri = URI.create(maxmindLink);
                System.out.println(maxmindLink); 
                java.awt.Desktop.getDesktop().browse(maxmindUri);
            } catch (Exception e) {
                System.out.println(e);
            }
        }
       
        
      
        inputBox.setText("");
        
        
        
    }//GEN-LAST:event_submitButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ThreatIntel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ThreatIntel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ThreatIntel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ThreatIntel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ThreatIntel().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox abuseipdb;
    private javax.swing.JCheckBox alienvault;
    private javax.swing.JCheckBox anomali;
    private javax.swing.JCheckBox cymon;
    private javax.swing.JTextField inputBox;
    private javax.swing.JCheckBox isc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JCheckBox malwaredomainlist;
    private javax.swing.JCheckBox maxmind;
    private javax.swing.JCheckBox robtex;
    private javax.swing.JCheckBox senderbase;
    private javax.swing.JButton submitButton;
    private javax.swing.JCheckBox virustotal;
    // End of variables declaration//GEN-END:variables
}
